version: '3.8'

services:
#
#  eureka:
#    build:
#      context: ./eureka
#      dockerfile: Dockerfile
#      args:
#        - BUILD_NO_CACHE=1
#    restart: always
#    ports:
#      - "8761:8761"
#
#  api-gateway:
#    build:
#      context: ./api-gateway
#      dockerfile: Dockerfile
#      args:
#        - BUILD_NO_CACHE=1
#    ports:
#      - "9000:9000"
#    links:
#      - eureka
#    depends_on:
#      - event
#      - ticket
#
#  event:
#    build:
#      context: ./event
#      dockerfile: Dockerfile
#      args:
#        - BUILD_NO_CACHE=1
#    restart: always
#    ports:
#      - "8081:8081"
#    depends_on:
##      - cassandra
#      - event-db
#  ticket:
#    build:
#      context: ./ticket
#      dockerfile: Dockerfile
#      args:
#        - BUILD_NO_CACHE=1
#    restart: always
#    ports:
#      - "8082:8082"
#    depends_on:
##      - cassandra
#      - ticket-db
#
#  email:
#    build:
#      context: ./email
#      dockerfile: Dockerfile
#      args:
#        - BUILD_NO_CACHE=1
#    restart: always
#    ports:
#      - "8083:8083"
#    links:
#      - eureka
#    depends_on:
#      - kafka

#  cassandra:
#    image: cassandra:latest
#    restart: always
#    ports:
#      - "9042:9042"
#    healthcheck:
#      test: [ "CMD", "cqlsh", "-e", "SELECT * FROM system.local;" ]
#      interval: 10s
#      timeout: 5s
#      retries: 3
#    volumes:
#      - ./cassandra-scripts:/scripts
#    command:
#      - /bin/bash -c "sleep 20 && cqlsh cassandra -R -f /scripts/create_keyspace.cql && sleep 10 && cqlsh cassandra -R -f /scripts/create_table.cql"

  cassandra:
    image: cassandra:latest
    container_name: cassandra
    ports:
      - "9042:9042"
    environment:
      - "MAX_HEAP_SIZE=256M"
      - "HEAP_NEWSIZE=128M"
    restart: always
    healthcheck:
      test: ["CMD", "cqlsh", "-u cassandra", "-p cassandra" ,"-e describe keyspaces"]
      interval: 15s
      timeout: 10s
      retries: 10

  cassandra-load-keyspace:
    container_name: cassandra-load-keyspace
    image: cassandra:latest
    depends_on:
      cassandra:
        condition: service_healthy
    volumes:
      - ./cassandra-scripts/schema.cql:/schema.cql
    command: /bin/bash -c "echo loading cassandra keyspace && cqlsh cassandra -f /schema.cql"

  event_db:
    container_name: event_db
    image: postgres:latest
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=event_db

  ticket_db:
    container_name: ticket_db
    image: postgres:latest
    restart: always
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ticket_db

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    restart: always

  kafka:
    restart: always
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1